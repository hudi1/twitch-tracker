<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tomass.twitch</groupId>
	<artifactId>twitchtracker</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>twitchtracker</name>
	<description>Twitchtracker</description>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath />
	</parent>

	<properties>
		<maven.compiler.source>16</maven.compiler.source>
		<maven.compiler.target>16</maven.compiler.target>
		<java.version>16</java.version>

		<version.sql-processor>3.5.1</version.sql-processor>
		<version.sqlp-processor>3.1.0</version.sqlp-processor>


		<default.profile>log-con,hikari,thymeleaf</default.profile>
		<start-class>org.tomass.twitch.twitchtracker.TwitchtrackerApplication</start-class>

		<default.context.path>/twitchtracker</default.context.path>
		<docker.image.name>80.211.209.135:30215/twitchtracker</docker.image.name>
		<docker.image.tag>latest</docker.image.tag>
		<appname>Twitchtracker</appname>
	</properties>

	<build>
		<finalName>${appname}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<layout>JAR</layout>
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src-gen</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/dockerfile</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.0</version>
				<configuration>
					<imageName>${docker.image.name}</imageName>
					<imageTags>
						<imageTag>${project.version}</imageTag>
						<imageTag>latest</imageTag>
					</imageTags>
					<dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*ITest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>


		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-actuator</artifactId>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>io.micrometer</groupId>-->
		<!--			<artifactId>micrometer-registry-prometheus</artifactId>-->
		<!--		</dependency>-->

		<dependency>
			<groupId>org.jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.5.3</version>
		</dependency>

		<dependency>
			<groupId>com.github.twitch4j</groupId>
			<artifactId>twitch4j</artifactId>
			<version>1.19.0</version>
		</dependency>
		

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.sqlproc</groupId>
			<artifactId>sql-processor-spring</artifactId>
			<version>${version.sql-processor}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>db2mo</id>
			<dependencies>
				<dependency>
					<groupId>org.sqlproc.model</groupId>
					<artifactId>sqlmodel</artifactId>
					<version>${version.sqlp-processor}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<executable>java</executable>
							<classpathScope>runtime</classpathScope>
							<arguments>
								<argument>-classpath</argument>
								<classpath>
									<dependency>org.sqlproc.model:sqlmodel</dependency>
									<dependency>com.mysql:mysql-connector-j</dependency>
									<dependency>org.sqlproc:sql-processor</dependency>
									<dependency>org.slf4j:slf4j-api</dependency>
									<dependency>
										org.springframework:spring-context</dependency>
								</classpath>
								<argument>
									org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</argument>
								<argument>-control</argument>
								<argument>definitions.model</argument>
								<argument>-pojo</argument>
								<argument>entity.model</argument>
								<argument>-dao</argument>
								<argument>dao.model</argument>
								<argument>-source</argument>
								<argument>src/main/resources</argument>
								<argument>-target</argument>
								<argument>src/main/resources</argument>
								<!--argument>-nomerge</argument -->
								<argument>-debug</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>db2me</id>
			<dependencies>
				<dependency>
					<groupId>org.sqlproc.meta</groupId>
					<artifactId>sqlmeta</artifactId>
					<version>${version.sqlp-processor}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<executable>java</executable>
							<classpathScope>runtime</classpathScope>
							<arguments>
								<argument>-classpath</argument>
								<classpath>
									<dependency>org.sqlproc.meta:sqlmeta</dependency>
									<dependency>com.mysql:mysql-connector-j</dependency>
									<dependency>org.sqlproc:sql-processor</dependency>
									<dependency>org.slf4j:slf4j-api</dependency>
									<dependency>
										org.springframework:spring-context</dependency>
								</classpath>
								<argument>
									org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</argument>
								<argument>-control</argument>
								<argument>definitions.meta</argument>
								<argument>-sql</argument>
								<argument>statements.meta</argument>
								<argument>-source</argument>
								<argument>src/main/resources</argument>
								<argument>-target</argument>
								<argument>src/main/resources</argument>
								<argument>-nomerge</argument>
								<argument>-debug</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mo2ja</id>
			<dependencies>
				<dependency>
					<groupId>org.sqlproc.model</groupId>
					<artifactId>sqlmodel</artifactId>
					<version>${version.sqlp-processor}</version>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<executable>java</executable>
							<classpathScope>runtime</classpathScope>
							<arguments>
								<argument>-classpath</argument>
								<classpath>
									<dependency>org.sqlproc.model:sqlmodel</dependency>
									<dependency>com.mysql:mysql-connector-j</dependency>
									<dependency>org.sqlproc:sql-processor</dependency>
									<dependency>org.slf4j:slf4j-api</dependency>
									<dependency>
										org.springframework:spring-context</dependency>
								</classpath>
								<argument>
									org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</argument>
								<argument>-control</argument>
								<argument>definitions.model</argument>
								<argument>-models</argument>
								<argument>entity.model,dao.model</argument>
								<argument>-source</argument>
								<argument>src/main/resources</argument>
								<argument>-target</argument>
								<argument>src-gen</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
